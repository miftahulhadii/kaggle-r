{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b4714d99",
   "metadata": {
    "papermill": {
     "duration": 0.004648,
     "end_time": "2023-03-19T08:26:37.687212",
     "exception": false,
     "start_time": "2023-03-19T08:26:37.682564",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1aefa5aa",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2023-03-19T08:26:37.699681Z",
     "iopub.status.busy": "2023-03-19T08:26:37.696405Z",
     "iopub.status.idle": "2023-03-19T08:26:39.219688Z",
     "shell.execute_reply": "2023-03-19T08:26:39.217756Z"
    },
    "papermill": {
     "duration": 1.531045,
     "end_time": "2023-03-19T08:26:39.222217",
     "exception": false,
     "start_time": "2023-03-19T08:26:37.691172",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "── \u001b[1mAttaching packages\u001b[22m ─────────────────────────────────────── tidyverse 1.3.2 ──\n",
      "\u001b[32m✔\u001b[39m \u001b[34mggplot2\u001b[39m 3.4.0      \u001b[32m✔\u001b[39m \u001b[34mpurrr  \u001b[39m 1.0.1 \n",
      "\u001b[32m✔\u001b[39m \u001b[34mtibble \u001b[39m 3.1.8      \u001b[32m✔\u001b[39m \u001b[34mdplyr  \u001b[39m 1.0.10\n",
      "\u001b[32m✔\u001b[39m \u001b[34mtidyr  \u001b[39m 1.2.1      \u001b[32m✔\u001b[39m \u001b[34mstringr\u001b[39m 1.5.0 \n",
      "\u001b[32m✔\u001b[39m \u001b[34mreadr  \u001b[39m 2.1.3      \u001b[32m✔\u001b[39m \u001b[34mforcats\u001b[39m 0.5.2 \n",
      "── \u001b[1mConflicts\u001b[22m ────────────────────────────────────────── tidyverse_conflicts() ──\n",
      "\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter()\n",
      "\u001b[31m✖\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m    masks \u001b[34mstats\u001b[39m::lag()\n",
      "Loading required package: timechange\n",
      "\n",
      "\n",
      "Attaching package: ‘lubridate’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    date, intersect, setdiff, union\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#bike-analysis-Cyclists\n",
    "\n",
    "#library\n",
    "library(tidyverse)\n",
    "library(lubridate)\n",
    "library(ggplot2)\n",
    "library(readr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29bc9b5d",
   "metadata": {
    "papermill": {
     "duration": 0.00418,
     "end_time": "2023-03-19T08:26:39.230210",
     "exception": false,
     "start_time": "2023-03-19T08:26:39.226030",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "##  STEP 1 - Collect Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "451b6df1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-03-19T08:26:39.271220Z",
     "iopub.status.busy": "2023-03-19T08:26:39.240345Z",
     "iopub.status.idle": "2023-03-19T08:27:16.173873Z",
     "shell.execute_reply": "2023-03-19T08:27:16.171670Z"
    },
    "papermill": {
     "duration": 36.944186,
     "end_time": "2023-03-19T08:27:16.178131",
     "exception": false,
     "start_time": "2023-03-19T08:26:39.233945",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1mRows: \u001b[22m\u001b[34m103770\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m115609\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m284042\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m371249\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m769204\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m823488\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m785932\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m701339\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m558685\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m181806\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m13\u001b[39m\n",
      "\u001b[36m──\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36m────────────────────────────────────────────────────────\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\n",
      "\u001b[32mdbl\u001b[39m  (4): start_lat, start_lng, end_lat, end_lng\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mℹ\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mℹ\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n"
     ]
    }
   ],
   "source": [
    "######  STEP 1 - Collect Data #######\n",
    "\n",
    "m1_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202201-divvy-tripdata.csv\")\n",
    "m2_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202202-divvy-tripdata.csv\")\n",
    "m3_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202203-divvy-tripdata.csv\")\n",
    "m4_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202204-divvy-tripdata.csv\")\n",
    "m5_2022 <- read.csv(\"/kaggle/input/bikeshareanalysis2022/202205-divvy-tripdata.csv\", sep=\";\")\n",
    "m6_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202206-divvy-tripdata.csv\")\n",
    "m7_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202207-divvy-tripdata.csv\")\n",
    "m8_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202208-divvy-tripdata.csv\")\n",
    "m9_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202209-divvy-tripdata.csv\")\n",
    "m10_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202210-divvy-tripdata.csv\")\n",
    "m11_2022 <- read.csv(\"/kaggle/input/bikeshareanalysis2022/202211-divvy-tripdata.csv\", sep=\";\")\n",
    "m12_2022 <- read_csv(\"/kaggle/input/bikeshareanalysis2022/202212-divvy-tripdata.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8dc85e9",
   "metadata": {
    "papermill": {
     "duration": 0.005306,
     "end_time": "2023-03-19T08:27:16.188804",
     "exception": false,
     "start_time": "2023-03-19T08:27:16.183498",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## STEP 2 - Collect Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "09005d66",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-03-19T08:27:16.203015Z",
     "iopub.status.busy": "2023-03-19T08:27:16.201584Z",
     "iopub.status.idle": "2023-03-19T08:27:16.535433Z",
     "shell.execute_reply": "2023-03-19T08:27:16.533719Z"
    },
    "papermill": {
     "duration": 0.346682,
     "end_time": "2023-03-19T08:27:16.540982",
     "exception": false,
     "start_time": "2023-03-19T08:27:16.194300",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spc_tbl_ [103,770 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:103770] \"C2F7DD78E82EC875\" \"A6CF8980A652D272\" \"BD0F91DFF741C66D\" \"CBB80ED419105406\" ...\n",
      " $ rideable_type     : chr [1:103770] \"electric_bike\" \"electric_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:103770], format: \"2022-01-13 11:59:47\" \"2022-01-10 08:41:56\" ...\n",
      " $ ended_at          : POSIXct[1:103770], format: \"2022-01-13 12:02:44\" \"2022-01-10 08:46:17\" ...\n",
      " $ start_station_name: chr [1:103770] \"Glenwood Ave & Touhy Ave\" \"Glenwood Ave & Touhy Ave\" \"Sheffield Ave & Fullerton Ave\" \"Clark St & Bryn Mawr Ave\" ...\n",
      " $ start_station_id  : chr [1:103770] \"525\" \"525\" \"TA1306000016\" \"KA1504000151\" ...\n",
      " $ end_station_name  : chr [1:103770] \"Clark St & Touhy Ave\" \"Clark St & Touhy Ave\" \"Greenview Ave & Fullerton Ave\" \"Paulina St & Montrose Ave\" ...\n",
      " $ end_station_id    : chr [1:103770] \"RP-007\" \"RP-007\" \"TA1307000001\" \"TA1309000021\" ...\n",
      " $ start_lat         : num [1:103770] 42 42 41.9 42 41.9 ...\n",
      " $ start_lng         : num [1:103770] -87.7 -87.7 -87.7 -87.7 -87.6 ...\n",
      " $ end_lat           : num [1:103770] 42 42 41.9 42 41.9 ...\n",
      " $ end_lng           : num [1:103770] -87.7 -87.7 -87.7 -87.7 -87.6 ...\n",
      " $ member_casual     : chr [1:103770] \"casual\" \"casual\" \"member\" \"casual\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [115,609 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:115609] \"E1E065E7ED285C02\" \"1602DCDC5B30FFE3\" \"BE7DD2AF4B55C4AF\" \"A1789BDF844412BE\" ...\n",
      " $ rideable_type     : chr [1:115609] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:115609], format: \"2022-02-19 18:08:41\" \"2022-02-20 17:41:30\" ...\n",
      " $ ended_at          : POSIXct[1:115609], format: \"2022-02-19 18:23:56\" \"2022-02-20 17:45:56\" ...\n",
      " $ start_station_name: chr [1:115609] \"State St & Randolph St\" \"Halsted St & Wrightwood Ave\" \"State St & Randolph St\" \"Southport Ave & Waveland Ave\" ...\n",
      " $ start_station_id  : chr [1:115609] \"TA1305000029\" \"TA1309000061\" \"TA1305000029\" \"13235\" ...\n",
      " $ end_station_name  : chr [1:115609] \"Clark St & Lincoln Ave\" \"Southport Ave & Wrightwood Ave\" \"Canal St & Adams St\" \"Broadway & Sheridan Rd\" ...\n",
      " $ end_station_id    : chr [1:115609] \"13179\" \"TA1307000113\" \"13011\" \"13323\" ...\n",
      " $ start_lat         : num [1:115609] 41.9 41.9 41.9 41.9 41.9 ...\n",
      " $ start_lng         : num [1:115609] -87.6 -87.6 -87.6 -87.7 -87.6 ...\n",
      " $ end_lat           : num [1:115609] 41.9 41.9 41.9 42 41.9 ...\n",
      " $ end_lng           : num [1:115609] -87.6 -87.7 -87.6 -87.6 -87.6 ...\n",
      " $ member_casual     : chr [1:115609] \"member\" \"member\" \"member\" \"member\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [284,042 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:284042] \"47EC0A7F82E65D52\" \"8494861979B0F477\" \"EFE527AF80B66109\" \"9F446FD9DEE3F389\" ...\n",
      " $ rideable_type     : chr [1:284042] \"classic_bike\" \"electric_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:284042], format: \"2022-03-21 13:45:01\" \"2022-03-16 09:37:16\" ...\n",
      " $ ended_at          : POSIXct[1:284042], format: \"2022-03-21 13:51:18\" \"2022-03-16 09:43:34\" ...\n",
      " $ start_station_name: chr [1:284042] \"Wabash Ave & Wacker Pl\" \"Michigan Ave & Oak St\" \"Broadway & Berwyn Ave\" \"Wabash Ave & Wacker Pl\" ...\n",
      " $ start_station_id  : chr [1:284042] \"TA1307000131\" \"13042\" \"13109\" \"TA1307000131\" ...\n",
      " $ end_station_name  : chr [1:284042] \"Kingsbury St & Kinzie St\" \"Orleans St & Chestnut St (NEXT Apts)\" \"Broadway & Ridge Ave\" \"Franklin St & Jackson Blvd\" ...\n",
      " $ end_station_id    : chr [1:284042] \"KA1503000043\" \"620\" \"15578\" \"TA1305000025\" ...\n",
      " $ start_lat         : num [1:284042] 41.9 41.9 42 41.9 41.9 ...\n",
      " $ start_lng         : num [1:284042] -87.6 -87.6 -87.7 -87.6 -87.6 ...\n",
      " $ end_lat           : num [1:284042] 41.9 41.9 42 41.9 41.9 ...\n",
      " $ end_lng           : num [1:284042] -87.6 -87.6 -87.7 -87.6 -87.7 ...\n",
      " $ member_casual     : chr [1:284042] \"member\" \"member\" \"member\" \"member\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [371,249 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:371249] \"3564070EEFD12711\" \"0B820C7FCF22F489\" \"89EEEE32293F07FF\" \"84D4751AEB31888D\" ...\n",
      " $ rideable_type     : chr [1:371249] \"electric_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:371249], format: \"2022-04-06 17:42:48\" \"2022-04-24 19:23:07\" ...\n",
      " $ ended_at          : POSIXct[1:371249], format: \"2022-04-06 17:54:36\" \"2022-04-24 19:43:17\" ...\n",
      " $ start_station_name: chr [1:371249] \"Paulina St & Howard St\" \"Wentworth Ave & Cermak Rd\" \"Halsted St & Polk St\" \"Wentworth Ave & Cermak Rd\" ...\n",
      " $ start_station_id  : chr [1:371249] \"515\" \"13075\" \"TA1307000121\" \"13075\" ...\n",
      " $ end_station_name  : chr [1:371249] \"University Library (NU)\" \"Green St & Madison St\" \"Green St & Madison St\" \"Delano Ct & Roosevelt Rd\" ...\n",
      " $ end_station_id    : chr [1:371249] \"605\" \"TA1307000120\" \"TA1307000120\" \"KA1706005007\" ...\n",
      " $ start_lat         : num [1:371249] 42 41.9 41.9 41.9 41.9 ...\n",
      " $ start_lng         : num [1:371249] -87.7 -87.6 -87.6 -87.6 -87.6 ...\n",
      " $ end_lat           : num [1:371249] 42.1 41.9 41.9 41.9 41.9 ...\n",
      " $ end_lng           : num [1:371249] -87.7 -87.6 -87.6 -87.6 -87.6 ...\n",
      " $ member_casual     : chr [1:371249] \"member\" \"member\" \"member\" \"casual\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "'data.frame':\t625535 obs. of  13 variables:\n",
      " $ ride_id           : chr  \"377BE1F5F0E399CA\" \"84676EDD2699ABF5\" \"CD303C87F4939429\" \"A373F319A922F3EA\" ...\n",
      " $ rideable_type     : chr  \"docked_bike\" \"docked_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : chr  \"29/05/2022 19:19\" \"14/05/2022 13:53\" \"31/05/2022 09:45\" \"22/05/2022 12:14\" ...\n",
      " $ ended_at          : chr  \"29/05/2022 19:31\" \"14/05/2022 17:30\" \"31/05/2022 09:53\" \"22/05/2022 12:44\" ...\n",
      " $ start_station_name: chr  \"Halsted St & Wrightwood Ave\" \"Ellis Ave & 53rd St\" \"Clark St & Newport St\" \"Sedgwick St & North Ave\" ...\n",
      " $ start_station_id  : chr  \"TA1309000061\" \"KA1503000052\" \"632\" \"TA1307000038\" ...\n",
      " $ end_station_name  : chr  \"Southport Ave & Clybourn Ave\" \"Ellis Ave & 53rd St\" \"Racine Ave & Wrightwood Ave\" \"Wood St & Milwaukee Ave\" ...\n",
      " $ end_station_id    : chr  \"TA1309000030\" \"KA1503000052\" \"TA1309000059\" \"13221\" ...\n",
      " $ start_lat         : num  41.9 41.8 41.9 41.9 41.9 ...\n",
      " $ start_lng         : num  -87.6 -87.6 -87.7 -87.6 -87.6 ...\n",
      " $ end_lat           : num  41.9 41.8 41.9 41.9 41.9 ...\n",
      " $ end_lng           : num  -87.7 -87.6 -87.7 -87.7 -87.6 ...\n",
      " $ member_casual     : chr  \"casual\" \"casual\" \"casual\" \"casual\" ...\n",
      "spc_tbl_ [769,204 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:769204] \"600CFD130D0FD2A4\" \"F5E6B5C1682C6464\" \"B6EB6D27BAD771D2\" \"C9C320375DE1D5C6\" ...\n",
      " $ rideable_type     : chr [1:769204] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n",
      " $ started_at        : POSIXct[1:769204], format: \"2022-06-30 17:27:53\" \"2022-06-30 18:39:52\" ...\n",
      " $ ended_at          : POSIXct[1:769204], format: \"2022-06-30 17:35:15\" \"2022-06-30 18:47:28\" ...\n",
      " $ start_station_name: chr [1:769204] NA NA NA NA ...\n",
      " $ start_station_id  : chr [1:769204] NA NA NA NA ...\n",
      " $ end_station_name  : chr [1:769204] NA NA NA NA ...\n",
      " $ end_station_id    : chr [1:769204] NA NA NA NA ...\n",
      " $ start_lat         : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n",
      " $ start_lng         : num [1:769204] -87.6 -87.6 -87.7 -87.7 -87.6 ...\n",
      " $ end_lat           : num [1:769204] 41.9 41.9 41.9 41.8 41.9 ...\n",
      " $ end_lng           : num [1:769204] -87.6 -87.6 -87.6 -87.7 -87.6 ...\n",
      " $ member_casual     : chr [1:769204] \"casual\" \"casual\" \"casual\" \"casual\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [823,488 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:823488] \"954144C2F67B1932\" \"292E027607D218B6\" \"57765852588AD6E0\" \"B5B6BE44314590E6\" ...\n",
      " $ rideable_type     : chr [1:823488] \"classic_bike\" \"classic_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:823488], format: \"2022-07-05 08:12:47\" \"2022-07-26 12:53:38\" ...\n",
      " $ ended_at          : POSIXct[1:823488], format: \"2022-07-05 08:24:32\" \"2022-07-26 12:55:31\" ...\n",
      " $ start_station_name: chr [1:823488] \"Ashland Ave & Blackhawk St\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" \"Buckingham Fountain (Temp)\" ...\n",
      " $ start_station_id  : chr [1:823488] \"13224\" \"15541\" \"15541\" \"15541\" ...\n",
      " $ end_station_name  : chr [1:823488] \"Kingsbury St & Kinzie St\" \"Michigan Ave & 8th St\" \"Michigan Ave & 8th St\" \"Woodlawn Ave & 55th St\" ...\n",
      " $ end_station_id    : chr [1:823488] \"KA1503000043\" \"623\" \"623\" \"TA1307000164\" ...\n",
      " $ start_lat         : num [1:823488] 41.9 41.9 41.9 41.9 41.9 ...\n",
      " $ start_lng         : num [1:823488] -87.7 -87.6 -87.6 -87.6 -87.6 ...\n",
      " $ end_lat           : num [1:823488] 41.9 41.9 41.9 41.8 41.9 ...\n",
      " $ end_lng           : num [1:823488] -87.6 -87.6 -87.6 -87.6 -87.7 ...\n",
      " $ member_casual     : chr [1:823488] \"member\" \"casual\" \"casual\" \"casual\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [785,932 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:785932] \"550CF7EFEAE0C618\" \"DAD198F405F9C5F5\" \"E6F2BC47B65CB7FD\" \"F597830181C2E13C\" ...\n",
      " $ rideable_type     : chr [1:785932] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n",
      " $ started_at        : POSIXct[1:785932], format: \"2022-08-07 21:34:15\" \"2022-08-08 14:39:21\" ...\n",
      " $ ended_at          : POSIXct[1:785932], format: \"2022-08-07 21:41:46\" \"2022-08-08 14:53:23\" ...\n",
      " $ start_station_name: chr [1:785932] NA NA NA NA ...\n",
      " $ start_station_id  : chr [1:785932] NA NA NA NA ...\n",
      " $ end_station_name  : chr [1:785932] NA NA NA NA ...\n",
      " $ end_station_id    : chr [1:785932] NA NA NA NA ...\n",
      " $ start_lat         : num [1:785932] 41.9 41.9 42 41.9 41.9 ...\n",
      " $ start_lng         : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n",
      " $ end_lat           : num [1:785932] 41.9 41.9 42 42 41.8 ...\n",
      " $ end_lng           : num [1:785932] -87.7 -87.6 -87.7 -87.7 -87.7 ...\n",
      " $ member_casual     : chr [1:785932] \"casual\" \"casual\" \"casual\" \"casual\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [701,339 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:701339] \"5156990AC19CA285\" \"E12D4A16BF51C274\" \"A02B53CD7DB72DD7\" \"C82E05FEE872DF11\" ...\n",
      " $ rideable_type     : chr [1:701339] \"electric_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n",
      " $ started_at        : POSIXct[1:701339], format: \"2022-09-01 08:36:22\" \"2022-09-01 17:11:29\" ...\n",
      " $ ended_at          : POSIXct[1:701339], format: \"2022-09-01 08:39:05\" \"2022-09-01 17:14:45\" ...\n",
      " $ start_station_name: chr [1:701339] NA NA NA NA ...\n",
      " $ start_station_id  : chr [1:701339] NA NA NA NA ...\n",
      " $ end_station_name  : chr [1:701339] \"California Ave & Milwaukee Ave\" NA NA NA ...\n",
      " $ end_station_id    : chr [1:701339] \"13084\" NA NA NA ...\n",
      " $ start_lat         : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n",
      " $ start_lng         : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n",
      " $ end_lat           : num [1:701339] 41.9 41.9 41.9 41.9 41.9 ...\n",
      " $ end_lng           : num [1:701339] -87.7 -87.6 -87.6 -87.7 -87.7 ...\n",
      " $ member_casual     : chr [1:701339] \"casual\" \"casual\" \"casual\" \"casual\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [558,685 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:558685] \"A50255C1E17942AB\" \"DB692A70BD2DD4E3\" \"3C02727AAF60F873\" \"47E653FDC2D99236\" ...\n",
      " $ rideable_type     : chr [1:558685] \"classic_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n",
      " $ started_at        : POSIXct[1:558685], format: \"2022-10-14 17:13:30\" \"2022-10-01 16:29:26\" ...\n",
      " $ ended_at          : POSIXct[1:558685], format: \"2022-10-14 17:19:39\" \"2022-10-01 16:49:06\" ...\n",
      " $ start_station_name: chr [1:558685] \"Noble St & Milwaukee Ave\" \"Damen Ave & Charleston St\" \"Hoyne Ave & Balmoral Ave\" \"Rush St & Cedar St\" ...\n",
      " $ start_station_id  : chr [1:558685] \"13290\" \"13288\" \"655\" \"KA1504000133\" ...\n",
      " $ end_station_name  : chr [1:558685] \"Larrabee St & Division St\" \"Damen Ave & Cullerton St\" \"Western Ave & Leland Ave\" \"Orleans St & Chestnut St (NEXT Apts)\" ...\n",
      " $ end_station_id    : chr [1:558685] \"KA1504000079\" \"13089\" \"TA1307000140\" \"620\" ...\n",
      " $ start_lat         : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n",
      " $ start_lng         : num [1:558685] -87.7 -87.7 -87.7 -87.6 -87.6 ...\n",
      " $ end_lat           : num [1:558685] 41.9 41.9 42 41.9 41.9 ...\n",
      " $ end_lng           : num [1:558685] -87.6 -87.7 -87.7 -87.6 -87.6 ...\n",
      " $ member_casual     : chr [1:558685] \"member\" \"casual\" \"member\" \"member\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "'data.frame':\t337735 obs. of  13 variables:\n",
      " $ ride_id           : chr  \"53706BF327A91FF2\" \"94D1BE7DE259ACD5\" \"5608C656DE64F4B2\" \"1423D0A1B5F36926\" ...\n",
      " $ rideable_type     : chr  \"classic_bike\" \"electric_bike\" \"classic_bike\" \"electric_bike\" ...\n",
      " $ started_at        : chr  \"06/11/2022 00:52\" \"02/11/2022 17:53\" \"15/11/2022 15:13\" \"30/11/2022 15:53\" ...\n",
      " $ ended_at          : chr  \"06/11/2022 01:05\" \"02/11/2022 18:02\" \"15/11/2022 15:18\" \"30/11/2022 16:00\" ...\n",
      " $ start_station_name: chr  \"Streeter Dr & Grand Ave\" \"Halsted St & Clybourn Ave\" \"Larrabee St & Division St\" \"Kedzie Ave & Bryn Mawr Ave\" ...\n",
      " $ start_station_id  : chr  \"13022\" \"331\" \"KA1504000079\" \"KA1504000167\" ...\n",
      " $ end_station_name  : chr  \"Orleans St & Chestnut St (NEXT Apts)\" \"Desplaines St & Kinzie St\" \"Orleans St & Chestnut St (NEXT Apts)\" \"Western Ave & Ardmore Ave\" ...\n",
      " $ end_station_id    : chr  \"620\" \"TA1306000003\" \"620\" \"464\" ...\n",
      " $ start_lat         : num  41.9 41.9 41.9 42 41.9 ...\n",
      " $ start_lng         : num  -87.6 -87.6 -87.6 -87.7 -87.6 ...\n",
      " $ end_lat           : num  41.9 41.9 41.9 42 41.9 ...\n",
      " $ end_lng           : num  -87.6 -87.6 -87.6 -87.7 -87.6 ...\n",
      " $ member_casual     : chr  \"casual\" \"casual\" \"casual\" \"casual\" ...\n",
      "spc_tbl_ [181,806 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:181806] \"65DBD2F447EC51C2\" \"0C201AA7EA0EA1AD\" \"E0B148CCB358A49D\" \"54C5775D2B7C9188\" ...\n",
      " $ rideable_type     : chr [1:181806] \"electric_bike\" \"classic_bike\" \"electric_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:181806], format: \"2022-12-05 10:47:18\" \"2022-12-18 06:42:33\" ...\n",
      " $ ended_at          : POSIXct[1:181806], format: \"2022-12-05 10:56:34\" \"2022-12-18 07:08:44\" ...\n",
      " $ start_station_name: chr [1:181806] \"Clifton Ave & Armitage Ave\" \"Broadway & Belmont Ave\" \"Sangamon St & Lake St\" \"Shields Ave & 31st St\" ...\n",
      " $ start_station_id  : chr [1:181806] \"TA1307000163\" \"13277\" \"TA1306000015\" \"KA1503000038\" ...\n",
      " $ end_station_name  : chr [1:181806] \"Sedgwick St & Webster Ave\" \"Sedgwick St & Webster Ave\" \"St. Clair St & Erie St\" \"Damen Ave & Madison St\" ...\n",
      " $ end_station_id    : chr [1:181806] \"13191\" \"13191\" \"13016\" \"13134\" ...\n",
      " $ start_lat         : num [1:181806] 41.9 41.9 41.9 41.8 41.9 ...\n",
      " $ start_lng         : num [1:181806] -87.7 -87.6 -87.7 -87.6 -87.7 ...\n",
      " $ end_lat           : num [1:181806] 41.9 41.9 41.9 41.9 41.9 ...\n",
      " $ end_lng           : num [1:181806] -87.6 -87.6 -87.6 -87.7 -87.7 ...\n",
      " $ member_casual     : chr [1:181806] \"member\" \"casual\" \"member\" \"member\" ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n"
     ]
    }
   ],
   "source": [
    "# define a vector with the names of the data frames\n",
    "m_list <- list(m1_2022, m2_2022, m3_2022, m4_2022, m5_2022, m6_2022, \n",
    "               m7_2022, m8_2022, m9_2022, m10_2022, m11_2022, m12_2022)\n",
    "\n",
    "# loop through the data frames and check colnames and data types\n",
    "for (m in m_list) {\n",
    "  colnames(m)\n",
    "  str(m)\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d518e970",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-03-19T08:27:16.557569Z",
     "iopub.status.busy": "2023-03-19T08:27:16.555902Z",
     "iopub.status.idle": "2023-03-19T08:28:05.491812Z",
     "shell.execute_reply": "2023-03-19T08:28:05.490016Z"
    },
    "papermill": {
     "duration": 48.946214,
     "end_time": "2023-03-19T08:28:05.494087",
     "exception": false,
     "start_time": "2023-03-19T08:27:16.547873",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#convert data types before combining\n",
    "#started_at column has a different format, make it into one datatypes\n",
    "m1_2022$started_at <- ymd_hms(m1_2022$started_at)\n",
    "m2_2022$started_at <- ymd_hms(m2_2022$started_at)\n",
    "m3_2022$started_at <- ymd_hms(m3_2022$started_at)\n",
    "m4_2022$started_at <- ymd_hms(m4_2022$started_at)\n",
    "m5_2022$started_at <- ymd_hms(m5_2022$started_at)\n",
    "m6_2022$started_at <- ymd_hms(m6_2022$started_at)\n",
    "m7_2022$started_at <- ymd_hms(m7_2022$started_at)\n",
    "m8_2022$started_at <- ymd_hms(m8_2022$started_at)\n",
    "m9_2022$started_at <- ymd_hms(m9_2022$started_at)\n",
    "m10_2022$started_at <- ymd_hms(m10_2022$started_at)\n",
    "m11_2022$started_at <- ymd_hms(m11_2022$started_at)\n",
    "m12_2022$started_at <- ymd_hms(m12_2022$started_at)\n",
    "\n",
    "#ended_at column has a different format, make it into one datatypes\n",
    "m1_2022$ended_at <- ymd_hms(m1_2022$ended_at)\n",
    "m2_2022$ended_at <- ymd_hms(m2_2022$ended_at)\n",
    "m3_2022$ended_at <- ymd_hms(m3_2022$ended_at)\n",
    "m4_2022$ended_at <- ymd_hms(m4_2022$ended_at)\n",
    "m5_2022$ended_at <- ymd_hms(m5_2022$ended_at)\n",
    "m6_2022$ended_at <- ymd_hms(m6_2022$ended_at)\n",
    "m7_2022$ended_at <- ymd_hms(m7_2022$ended_at)\n",
    "m8_2022$ended_at <- ymd_hms(m8_2022$ended_at)\n",
    "m9_2022$ended_at <- ymd_hms(m9_2022$ended_at)\n",
    "m10_2022$ended_at <- ymd_hms(m10_2022$ended_at)\n",
    "m11_2022$ended_at <- ymd_hms(m11_2022$ended_at)\n",
    "m12_2022$ended_at <- ymd_hms(m12_2022$ended_at)\n",
    "\n",
    "#combine all sheet\n",
    "all_trips <- bind_rows(m1_2022, m2_2022, m3_2022, m4_2022, m5_2022, m6_2022, m7_2022, m8_2022, m9_2022, m10_2022, m11_2022, m12_2022)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f391863",
   "metadata": {
    "papermill": {
     "duration": 0.006424,
     "end_time": "2023-03-19T08:28:05.506683",
     "exception": false,
     "start_time": "2023-03-19T08:28:05.500259",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## STEP 3 - Clean Up and Add Data for Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e8eb5522",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-03-19T08:28:05.522184Z",
     "iopub.status.busy": "2023-03-19T08:28:05.520650Z",
     "iopub.status.idle": "2023-03-19T08:28:22.647647Z",
     "shell.execute_reply": "2023-03-19T08:28:22.645888Z"
    },
    "papermill": {
     "duration": 17.137491,
     "end_time": "2023-03-19T08:28:22.650267",
     "exception": false,
     "start_time": "2023-03-19T08:28:05.512776",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'ride_id'</li><li>'rideable_type'</li><li>'started_at'</li><li>'ended_at'</li><li>'start_station_name'</li><li>'start_station_id'</li><li>'end_station_name'</li><li>'end_station_id'</li><li>'member_casual'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'ride\\_id'\n",
       "\\item 'rideable\\_type'\n",
       "\\item 'started\\_at'\n",
       "\\item 'ended\\_at'\n",
       "\\item 'start\\_station\\_name'\n",
       "\\item 'start\\_station\\_id'\n",
       "\\item 'end\\_station\\_name'\n",
       "\\item 'end\\_station\\_id'\n",
       "\\item 'member\\_casual'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'ride_id'\n",
       "2. 'rideable_type'\n",
       "3. 'started_at'\n",
       "4. 'ended_at'\n",
       "5. 'start_station_name'\n",
       "6. 'start_station_id'\n",
       "7. 'end_station_name'\n",
       "8. 'end_station_id'\n",
       "9. 'member_casual'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n",
       "[4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n",
       "[7] \"end_station_name\"   \"end_station_id\"     \"member_casual\"     "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "5658394"
      ],
      "text/latex": [
       "5658394"
      ],
      "text/markdown": [
       "5658394"
      ],
      "text/plain": [
       "[1] 5658394"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>5658394</li><li>9</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 5658394\n",
       "\\item 9\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 5658394\n",
       "2. 9\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 5658394       9"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 6 × 9</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>ride_id</th><th scope=col>rideable_type</th><th scope=col>started_at</th><th scope=col>ended_at</th><th scope=col>start_station_name</th><th scope=col>start_station_id</th><th scope=col>end_station_name</th><th scope=col>end_station_id</th><th scope=col>member_casual</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dttm&gt;</th><th scope=col>&lt;dttm&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>C2F7DD78E82EC875</td><td>electric_bike</td><td>2022-01-13 11:59:47</td><td>2022-01-13 12:02:44</td><td><span style=white-space:pre-wrap>Glenwood Ave &amp; Touhy Ave     </span></td><td><span style=white-space:pre-wrap>525         </span></td><td><span style=white-space:pre-wrap>Clark St &amp; Touhy Ave         </span></td><td><span style=white-space:pre-wrap>RP-007      </span></td><td>casual</td></tr>\n",
       "\t<tr><td>A6CF8980A652D272</td><td>electric_bike</td><td>2022-01-10 08:41:56</td><td>2022-01-10 08:46:17</td><td><span style=white-space:pre-wrap>Glenwood Ave &amp; Touhy Ave     </span></td><td><span style=white-space:pre-wrap>525         </span></td><td><span style=white-space:pre-wrap>Clark St &amp; Touhy Ave         </span></td><td><span style=white-space:pre-wrap>RP-007      </span></td><td>casual</td></tr>\n",
       "\t<tr><td>BD0F91DFF741C66D</td><td>classic_bike </td><td>2022-01-25 04:53:40</td><td>2022-01-25 04:58:01</td><td>Sheffield Ave &amp; Fullerton Ave</td><td>TA1306000016</td><td>Greenview Ave &amp; Fullerton Ave</td><td>TA1307000001</td><td>member</td></tr>\n",
       "\t<tr><td>CBB80ED419105406</td><td>classic_bike </td><td>2022-01-04 00:18:04</td><td>2022-01-04 00:33:00</td><td><span style=white-space:pre-wrap>Clark St &amp; Bryn Mawr Ave     </span></td><td>KA1504000151</td><td><span style=white-space:pre-wrap>Paulina St &amp; Montrose Ave    </span></td><td>TA1309000021</td><td>casual</td></tr>\n",
       "\t<tr><td>DDC963BFDDA51EEA</td><td>classic_bike </td><td>2022-01-20 01:31:10</td><td>2022-01-20 01:37:12</td><td><span style=white-space:pre-wrap>Michigan Ave &amp; Jackson Blvd  </span></td><td>TA1309000002</td><td><span style=white-space:pre-wrap>State St &amp; Randolph St       </span></td><td>TA1305000029</td><td>member</td></tr>\n",
       "\t<tr><td>A39C6F6CC0586C0B</td><td>classic_bike </td><td>2022-01-11 18:48:09</td><td>2022-01-11 18:51:31</td><td><span style=white-space:pre-wrap>Wood St &amp; Chicago Ave        </span></td><td><span style=white-space:pre-wrap>637         </span></td><td><span style=white-space:pre-wrap>Honore St &amp; Division St      </span></td><td>TA1305000034</td><td>member</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 6 × 9\n",
       "\\begin{tabular}{lllllllll}\n",
       " ride\\_id & rideable\\_type & started\\_at & ended\\_at & start\\_station\\_name & start\\_station\\_id & end\\_station\\_name & end\\_station\\_id & member\\_casual\\\\\n",
       " <chr> & <chr> & <dttm> & <dttm> & <chr> & <chr> & <chr> & <chr> & <chr>\\\\\n",
       "\\hline\n",
       "\t C2F7DD78E82EC875 & electric\\_bike & 2022-01-13 11:59:47 & 2022-01-13 12:02:44 & Glenwood Ave \\& Touhy Ave      & 525          & Clark St \\& Touhy Ave          & RP-007       & casual\\\\\n",
       "\t A6CF8980A652D272 & electric\\_bike & 2022-01-10 08:41:56 & 2022-01-10 08:46:17 & Glenwood Ave \\& Touhy Ave      & 525          & Clark St \\& Touhy Ave          & RP-007       & casual\\\\\n",
       "\t BD0F91DFF741C66D & classic\\_bike  & 2022-01-25 04:53:40 & 2022-01-25 04:58:01 & Sheffield Ave \\& Fullerton Ave & TA1306000016 & Greenview Ave \\& Fullerton Ave & TA1307000001 & member\\\\\n",
       "\t CBB80ED419105406 & classic\\_bike  & 2022-01-04 00:18:04 & 2022-01-04 00:33:00 & Clark St \\& Bryn Mawr Ave      & KA1504000151 & Paulina St \\& Montrose Ave     & TA1309000021 & casual\\\\\n",
       "\t DDC963BFDDA51EEA & classic\\_bike  & 2022-01-20 01:31:10 & 2022-01-20 01:37:12 & Michigan Ave \\& Jackson Blvd   & TA1309000002 & State St \\& Randolph St        & TA1305000029 & member\\\\\n",
       "\t A39C6F6CC0586C0B & classic\\_bike  & 2022-01-11 18:48:09 & 2022-01-11 18:51:31 & Wood St \\& Chicago Ave         & 637          & Honore St \\& Division St       & TA1305000034 & member\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 6 × 9\n",
       "\n",
       "| ride_id &lt;chr&gt; | rideable_type &lt;chr&gt; | started_at &lt;dttm&gt; | ended_at &lt;dttm&gt; | start_station_name &lt;chr&gt; | start_station_id &lt;chr&gt; | end_station_name &lt;chr&gt; | end_station_id &lt;chr&gt; | member_casual &lt;chr&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| C2F7DD78E82EC875 | electric_bike | 2022-01-13 11:59:47 | 2022-01-13 12:02:44 | Glenwood Ave &amp; Touhy Ave      | 525          | Clark St &amp; Touhy Ave          | RP-007       | casual |\n",
       "| A6CF8980A652D272 | electric_bike | 2022-01-10 08:41:56 | 2022-01-10 08:46:17 | Glenwood Ave &amp; Touhy Ave      | 525          | Clark St &amp; Touhy Ave          | RP-007       | casual |\n",
       "| BD0F91DFF741C66D | classic_bike  | 2022-01-25 04:53:40 | 2022-01-25 04:58:01 | Sheffield Ave &amp; Fullerton Ave | TA1306000016 | Greenview Ave &amp; Fullerton Ave | TA1307000001 | member |\n",
       "| CBB80ED419105406 | classic_bike  | 2022-01-04 00:18:04 | 2022-01-04 00:33:00 | Clark St &amp; Bryn Mawr Ave      | KA1504000151 | Paulina St &amp; Montrose Ave     | TA1309000021 | casual |\n",
       "| DDC963BFDDA51EEA | classic_bike  | 2022-01-20 01:31:10 | 2022-01-20 01:37:12 | Michigan Ave &amp; Jackson Blvd   | TA1309000002 | State St &amp; Randolph St        | TA1305000029 | member |\n",
       "| A39C6F6CC0586C0B | classic_bike  | 2022-01-11 18:48:09 | 2022-01-11 18:51:31 | Wood St &amp; Chicago Ave         | 637          | Honore St &amp; Division St       | TA1305000034 | member |\n",
       "\n"
      ],
      "text/plain": [
       "  ride_id          rideable_type started_at          ended_at           \n",
       "1 C2F7DD78E82EC875 electric_bike 2022-01-13 11:59:47 2022-01-13 12:02:44\n",
       "2 A6CF8980A652D272 electric_bike 2022-01-10 08:41:56 2022-01-10 08:46:17\n",
       "3 BD0F91DFF741C66D classic_bike  2022-01-25 04:53:40 2022-01-25 04:58:01\n",
       "4 CBB80ED419105406 classic_bike  2022-01-04 00:18:04 2022-01-04 00:33:00\n",
       "5 DDC963BFDDA51EEA classic_bike  2022-01-20 01:31:10 2022-01-20 01:37:12\n",
       "6 A39C6F6CC0586C0B classic_bike  2022-01-11 18:48:09 2022-01-11 18:51:31\n",
       "  start_station_name            start_station_id end_station_name             \n",
       "1 Glenwood Ave & Touhy Ave      525              Clark St & Touhy Ave         \n",
       "2 Glenwood Ave & Touhy Ave      525              Clark St & Touhy Ave         \n",
       "3 Sheffield Ave & Fullerton Ave TA1306000016     Greenview Ave & Fullerton Ave\n",
       "4 Clark St & Bryn Mawr Ave      KA1504000151     Paulina St & Montrose Ave    \n",
       "5 Michigan Ave & Jackson Blvd   TA1309000002     State St & Randolph St       \n",
       "6 Wood St & Chicago Ave         637              Honore St & Division St      \n",
       "  end_station_id member_casual\n",
       "1 RP-007         casual       \n",
       "2 RP-007         casual       \n",
       "3 TA1307000001   member       \n",
       "4 TA1309000021   casual       \n",
       "5 TA1305000029   member       \n",
       "6 TA1305000034   member       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tibble [5,658,394 × 9] (S3: tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:5658394] \"C2F7DD78E82EC875\" \"A6CF8980A652D272\" \"BD0F91DFF741C66D\" \"CBB80ED419105406\" ...\n",
      " $ rideable_type     : chr [1:5658394] \"electric_bike\" \"electric_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:5658394], format: \"2022-01-13 11:59:47\" \"2022-01-10 08:41:56\" ...\n",
      " $ ended_at          : POSIXct[1:5658394], format: \"2022-01-13 12:02:44\" \"2022-01-10 08:46:17\" ...\n",
      " $ start_station_name: chr [1:5658394] \"Glenwood Ave & Touhy Ave\" \"Glenwood Ave & Touhy Ave\" \"Sheffield Ave & Fullerton Ave\" \"Clark St & Bryn Mawr Ave\" ...\n",
      " $ start_station_id  : chr [1:5658394] \"525\" \"525\" \"TA1306000016\" \"KA1504000151\" ...\n",
      " $ end_station_name  : chr [1:5658394] \"Clark St & Touhy Ave\" \"Clark St & Touhy Ave\" \"Greenview Ave & Fullerton Ave\" \"Paulina St & Montrose Ave\" ...\n",
      " $ end_station_id    : chr [1:5658394] \"RP-007\" \"RP-007\" \"TA1307000001\" \"TA1309000021\" ...\n",
      " $ member_casual     : chr [1:5658394] \"casual\" \"casual\" \"member\" \"casual\" ...\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "   ride_id          rideable_type        started_at                 \n",
       " Length:5658394     Length:5658394     Min.   :2001-05-20 22:00:00  \n",
       " Class :character   Class :character   1st Qu.:2022-04-23 12:38:04  \n",
       " Mode  :character   Mode  :character   Median :2022-07-20 18:31:45  \n",
       "                                       Mean   :2021-07-04 12:03:33  \n",
       "                                       3rd Qu.:2022-09-14 09:06:16  \n",
       "                                       Max.   :2031-05-20 22:23:59  \n",
       "    ended_at                   start_station_name start_station_id  \n",
       " Min.   :2001-05-20 22:00:05   Length:5658394     Length:5658394    \n",
       " 1st Qu.:2022-04-23 13:07:15   Class :character   Class :character  \n",
       " Median :2022-07-20 18:50:51   Mode  :character   Mode  :character  \n",
       " Mean   :2021-07-04 16:14:46                                        \n",
       " 3rd Qu.:2022-09-14 09:22:50                                        \n",
       " Max.   :2031-05-20 22:23:59                                        \n",
       " end_station_name   end_station_id     member_casual     \n",
       " Length:5658394     Length:5658394     Length:5658394    \n",
       " Class :character   Class :character   Class :character  \n",
       " Mode  :character   Mode  :character   Mode  :character  \n",
       "                                                         \n",
       "                                                         \n",
       "                                                         "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'casual'</li><li>'member'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'casual'\n",
       "\\item 'member'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'casual'\n",
       "2. 'member'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"casual\" \"member\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "\n",
       " casual  member \n",
       "2322032 3336362 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tibble [5,658,394 × 15] (S3: tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:5658394] \"C2F7DD78E82EC875\" \"A6CF8980A652D272\" \"BD0F91DFF741C66D\" \"CBB80ED419105406\" ...\n",
      " $ rideable_type     : chr [1:5658394] \"electric_bike\" \"electric_bike\" \"classic_bike\" \"classic_bike\" ...\n",
      " $ started_at        : POSIXct[1:5658394], format: \"2022-01-13 11:59:47\" \"2022-01-10 08:41:56\" ...\n",
      " $ ended_at          : POSIXct[1:5658394], format: \"2022-01-13 12:02:44\" \"2022-01-10 08:46:17\" ...\n",
      " $ start_station_name: chr [1:5658394] \"Glenwood Ave & Touhy Ave\" \"Glenwood Ave & Touhy Ave\" \"Sheffield Ave & Fullerton Ave\" \"Clark St & Bryn Mawr Ave\" ...\n",
      " $ start_station_id  : chr [1:5658394] \"525\" \"525\" \"TA1306000016\" \"KA1504000151\" ...\n",
      " $ end_station_name  : chr [1:5658394] \"Clark St & Touhy Ave\" \"Clark St & Touhy Ave\" \"Greenview Ave & Fullerton Ave\" \"Paulina St & Montrose Ave\" ...\n",
      " $ end_station_id    : chr [1:5658394] \"RP-007\" \"RP-007\" \"TA1307000001\" \"TA1309000021\" ...\n",
      " $ member_casual     : chr [1:5658394] \"casual\" \"casual\" \"member\" \"casual\" ...\n",
      " $ date              : Date[1:5658394], format: \"2022-01-13\" \"2022-01-10\" ...\n",
      " $ month             : chr [1:5658394] \"01\" \"01\" \"01\" \"01\" ...\n",
      " $ day               : chr [1:5658394] \"13\" \"10\" \"25\" \"04\" ...\n",
      " $ year              : chr [1:5658394] \"2022\" \"2022\" \"2022\" \"2022\" ...\n",
      " $ day_of_week       : chr [1:5658394] \"Thursday\" \"Monday\" \"Tuesday\" \"Tuesday\" ...\n",
      " $ ride_length       : 'difftime' num [1:5658394] 177 261 261 896 ...\n",
      "  ..- attr(*, \"units\")= chr \"secs\"\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "FALSE"
      ],
      "text/latex": [
       "FALSE"
      ],
      "text/markdown": [
       "FALSE"
      ],
      "text/plain": [
       "[1] FALSE"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "TRUE"
      ],
      "text/latex": [
       "TRUE"
      ],
      "text/markdown": [
       "TRUE"
      ],
      "text/plain": [
       "[1] TRUE"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#remove some unused column\n",
    "all_trips <- all_trips %>%\n",
    "  select(-c(start_lat, start_lng, end_lat, end_lng))\n",
    "\n",
    "#clean up and add data to prepare for analysis\n",
    "colnames(all_trips)   #list of column names\n",
    "nrow(all_trips)       #total row\n",
    "dim(all_trips)        #total dimension\n",
    "head(all_trips)       #view first 6 rows\n",
    "str(all_trips)        #see list of data types\n",
    "summary(all_trips)    #statistical summary\n",
    "\n",
    "#check is there any problem in memberships and others?\n",
    "\n",
    "unique(all_trips$member_casual) #for unique value\n",
    "table(all_trips$member_casual)  #total unique value\n",
    "\n",
    "# if there's any problem on memberships, dualism value (subscriber = member)\n",
    "# use recode functions\n",
    "# all_trips <- all_trips %>% \n",
    "# mutate(member_casual = recode(member_casual, \"Subscriber\" = \"member\", \"Customer\" = \"casual\"))\n",
    "\n",
    "# add columns that list the date, month, day, and year of each ride\n",
    "all_trips$date <- as.Date(all_trips$started_at) #The default format is yyyy-mm-dd\n",
    "all_trips$month <- format(as.Date(all_trips$date), \"%m\")\n",
    "all_trips$day <- format(as.Date(all_trips$date), \"%d\")\n",
    "all_trips$year <- format(as.Date(all_trips$date), \"%Y\")\n",
    "all_trips$day_of_week <- format(as.Date(all_trips$date), \"%A\")\n",
    "\n",
    "# calculate difftime in R (already done in Excel, for docs)\n",
    "## https://stat.ethz.ch/R-manual/R-devel/library/base/html/difftime.html\n",
    "all_trips$ride_length <- difftime(all_trips$ended_at,all_trips$started_at)\n",
    "\n",
    "# inspect the columns data types\n",
    "str(all_trips)\n",
    "\n",
    "# convert the data types\n",
    "## change the ride_length column\n",
    "\n",
    "is.numeric(all_trips$ride_length) #to check if the ride length was in number/factor\n",
    "all_trips$ride_length <- as.numeric(all_trips$ride_length)\n",
    "is.numeric(all_trips$ride_length)\n",
    "\n",
    "## https://www.datasciencemadesimple.com/delete-or-drop-rows-in-r-with-conditions-2/\n",
    "\n",
    "## If we check the data, there's minus ride length, its bad data\n",
    "all_trips_v2 <- subset(all_trips, ride_length>0) #include only ride length over 0 s"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca1621f8",
   "metadata": {
    "papermill": {
     "duration": 0.007682,
     "end_time": "2023-03-19T08:28:22.666133",
     "exception": false,
     "start_time": "2023-03-19T08:28:22.658451",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## STEP 4 - Conduct Descriptive Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "38afb2dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-03-19T08:28:22.685033Z",
     "iopub.status.busy": "2023-03-19T08:28:22.683460Z",
     "iopub.status.idle": "2023-03-19T08:28:35.990989Z",
     "shell.execute_reply": "2023-03-19T08:28:35.989317Z"
    },
    "papermill": {
     "duration": 13.320243,
     "end_time": "2023-03-19T08:28:35.993936",
     "exception": false,
     "start_time": "2023-03-19T08:28:22.673693",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "36645.9794155152"
      ],
      "text/latex": [
       "36645.9794155152"
      ],
      "text/markdown": [
       "36645.9794155152"
      ],
      "text/plain": [
       "[1] 36645.98"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "500"
      ],
      "text/latex": [
       "500"
      ],
      "text/markdown": [
       "500"
      ],
      "text/plain": [
       "[1] 500"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "568079087"
      ],
      "text/latex": [
       "568079087"
      ],
      "text/markdown": [
       "568079087"
      ],
      "text/plain": [
       "[1] 568079087"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "1"
      ],
      "text/latex": [
       "1"
      ],
      "text/markdown": [
       "1"
      ],
      "text/plain": [
       "[1] 1"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n",
       "        1       207       500     36646       971 568079087 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 2 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>membership_type</th><th scope=col>average_ride_length</th><th scope=col>number_of_rides</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>65135.79</td><td>2317150</td></tr>\n",
       "\t<tr><td>member</td><td>16815.33</td><td>3328947</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 2 × 3\n",
       "\\begin{tabular}{lll}\n",
       " membership\\_type & average\\_ride\\_length & number\\_of\\_rides\\\\\n",
       " <chr> & <dbl> & <int>\\\\\n",
       "\\hline\n",
       "\t casual & 65135.79 & 2317150\\\\\n",
       "\t member & 16815.33 & 3328947\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 2 × 3\n",
       "\n",
       "| membership_type &lt;chr&gt; | average_ride_length &lt;dbl&gt; | number_of_rides &lt;int&gt; |\n",
       "|---|---|---|\n",
       "| casual | 65135.79 | 2317150 |\n",
       "| member | 16815.33 | 3328947 |\n",
       "\n"
      ],
      "text/plain": [
       "  membership_type average_ride_length number_of_rides\n",
       "1 casual          65135.79            2317150        \n",
       "2 member          16815.33            3328947        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[22m`summarise()` has grouped output by 'membership_type'. You can override using\n",
      "the `.groups` argument.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A grouped_df: 14 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>membership_type</th><th scope=col>day_of_week</th><th scope=col>average_ride_length</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>Friday   </td><td> 44073.56</td></tr>\n",
       "\t<tr><td>casual</td><td>Monday   </td><td>103079.53</td></tr>\n",
       "\t<tr><td>casual</td><td>Saturday </td><td> 49364.23</td></tr>\n",
       "\t<tr><td>casual</td><td>Sunday   </td><td> 72027.80</td></tr>\n",
       "\t<tr><td>casual</td><td>Thursday </td><td> 60407.26</td></tr>\n",
       "\t<tr><td>casual</td><td>Tuesday  </td><td> 76724.57</td></tr>\n",
       "\t<tr><td>casual</td><td>Wednesday</td><td> 61449.28</td></tr>\n",
       "\t<tr><td>member</td><td>Friday   </td><td> 13002.92</td></tr>\n",
       "\t<tr><td>member</td><td>Monday   </td><td> 16801.05</td></tr>\n",
       "\t<tr><td>member</td><td>Saturday </td><td> 19310.45</td></tr>\n",
       "\t<tr><td>member</td><td>Sunday   </td><td> 26506.28</td></tr>\n",
       "\t<tr><td>member</td><td>Thursday </td><td> 15108.39</td></tr>\n",
       "\t<tr><td>member</td><td>Tuesday  </td><td> 16710.45</td></tr>\n",
       "\t<tr><td>member</td><td>Wednesday</td><td> 12346.86</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A grouped\\_df: 14 × 3\n",
       "\\begin{tabular}{lll}\n",
       " membership\\_type & day\\_of\\_week & average\\_ride\\_length\\\\\n",
       " <chr> & <chr> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & Friday    &  44073.56\\\\\n",
       "\t casual & Monday    & 103079.53\\\\\n",
       "\t casual & Saturday  &  49364.23\\\\\n",
       "\t casual & Sunday    &  72027.80\\\\\n",
       "\t casual & Thursday  &  60407.26\\\\\n",
       "\t casual & Tuesday   &  76724.57\\\\\n",
       "\t casual & Wednesday &  61449.28\\\\\n",
       "\t member & Friday    &  13002.92\\\\\n",
       "\t member & Monday    &  16801.05\\\\\n",
       "\t member & Saturday  &  19310.45\\\\\n",
       "\t member & Sunday    &  26506.28\\\\\n",
       "\t member & Thursday  &  15108.39\\\\\n",
       "\t member & Tuesday   &  16710.45\\\\\n",
       "\t member & Wednesday &  12346.86\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A grouped_df: 14 × 3\n",
       "\n",
       "| membership_type &lt;chr&gt; | day_of_week &lt;chr&gt; | average_ride_length &lt;dbl&gt; |\n",
       "|---|---|---|\n",
       "| casual | Friday    |  44073.56 |\n",
       "| casual | Monday    | 103079.53 |\n",
       "| casual | Saturday  |  49364.23 |\n",
       "| casual | Sunday    |  72027.80 |\n",
       "| casual | Thursday  |  60407.26 |\n",
       "| casual | Tuesday   |  76724.57 |\n",
       "| casual | Wednesday |  61449.28 |\n",
       "| member | Friday    |  13002.92 |\n",
       "| member | Monday    |  16801.05 |\n",
       "| member | Saturday  |  19310.45 |\n",
       "| member | Sunday    |  26506.28 |\n",
       "| member | Thursday  |  15108.39 |\n",
       "| member | Tuesday   |  16710.45 |\n",
       "| member | Wednesday |  12346.86 |\n",
       "\n"
      ],
      "text/plain": [
       "   membership_type day_of_week average_ride_length\n",
       "1  casual          Friday       44073.56          \n",
       "2  casual          Monday      103079.53          \n",
       "3  casual          Saturday     49364.23          \n",
       "4  casual          Sunday       72027.80          \n",
       "5  casual          Thursday     60407.26          \n",
       "6  casual          Tuesday      76724.57          \n",
       "7  casual          Wednesday    61449.28          \n",
       "8  member          Friday       13002.92          \n",
       "9  member          Monday       16801.05          \n",
       "10 member          Saturday     19310.45          \n",
       "11 member          Sunday       26506.28          \n",
       "12 member          Thursday     15108.39          \n",
       "13 member          Tuesday      16710.45          \n",
       "14 member          Wednesday    12346.86          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[22m`summarise()` has grouped output by 'membership_type'. You can override using\n",
      "the `.groups` argument.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A grouped_df: 14 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>membership_type</th><th scope=col>day_of_week</th><th scope=col>average_ride_length</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;ord&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>Sunday   </td><td> 72027.80</td></tr>\n",
       "\t<tr><td>casual</td><td>Monday   </td><td>103079.53</td></tr>\n",
       "\t<tr><td>casual</td><td>Tuesday  </td><td> 76724.57</td></tr>\n",
       "\t<tr><td>casual</td><td>Wednesday</td><td> 61449.28</td></tr>\n",
       "\t<tr><td>casual</td><td>Thursday </td><td> 60407.26</td></tr>\n",
       "\t<tr><td>casual</td><td>Friday   </td><td> 44073.56</td></tr>\n",
       "\t<tr><td>casual</td><td>Saturday </td><td> 49364.23</td></tr>\n",
       "\t<tr><td>member</td><td>Sunday   </td><td> 26506.28</td></tr>\n",
       "\t<tr><td>member</td><td>Monday   </td><td> 16801.05</td></tr>\n",
       "\t<tr><td>member</td><td>Tuesday  </td><td> 16710.45</td></tr>\n",
       "\t<tr><td>member</td><td>Wednesday</td><td> 12346.86</td></tr>\n",
       "\t<tr><td>member</td><td>Thursday </td><td> 15108.39</td></tr>\n",
       "\t<tr><td>member</td><td>Friday   </td><td> 13002.92</td></tr>\n",
       "\t<tr><td>member</td><td>Saturday </td><td> 19310.45</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A grouped\\_df: 14 × 3\n",
       "\\begin{tabular}{lll}\n",
       " membership\\_type & day\\_of\\_week & average\\_ride\\_length\\\\\n",
       " <chr> & <ord> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & Sunday    &  72027.80\\\\\n",
       "\t casual & Monday    & 103079.53\\\\\n",
       "\t casual & Tuesday   &  76724.57\\\\\n",
       "\t casual & Wednesday &  61449.28\\\\\n",
       "\t casual & Thursday  &  60407.26\\\\\n",
       "\t casual & Friday    &  44073.56\\\\\n",
       "\t casual & Saturday  &  49364.23\\\\\n",
       "\t member & Sunday    &  26506.28\\\\\n",
       "\t member & Monday    &  16801.05\\\\\n",
       "\t member & Tuesday   &  16710.45\\\\\n",
       "\t member & Wednesday &  12346.86\\\\\n",
       "\t member & Thursday  &  15108.39\\\\\n",
       "\t member & Friday    &  13002.92\\\\\n",
       "\t member & Saturday  &  19310.45\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A grouped_df: 14 × 3\n",
       "\n",
       "| membership_type &lt;chr&gt; | day_of_week &lt;ord&gt; | average_ride_length &lt;dbl&gt; |\n",
       "|---|---|---|\n",
       "| casual | Sunday    |  72027.80 |\n",
       "| casual | Monday    | 103079.53 |\n",
       "| casual | Tuesday   |  76724.57 |\n",
       "| casual | Wednesday |  61449.28 |\n",
       "| casual | Thursday  |  60407.26 |\n",
       "| casual | Friday    |  44073.56 |\n",
       "| casual | Saturday  |  49364.23 |\n",
       "| member | Sunday    |  26506.28 |\n",
       "| member | Monday    |  16801.05 |\n",
       "| member | Tuesday   |  16710.45 |\n",
       "| member | Wednesday |  12346.86 |\n",
       "| member | Thursday  |  15108.39 |\n",
       "| member | Friday    |  13002.92 |\n",
       "| member | Saturday  |  19310.45 |\n",
       "\n"
      ],
      "text/plain": [
       "   membership_type day_of_week average_ride_length\n",
       "1  casual          Sunday       72027.80          \n",
       "2  casual          Monday      103079.53          \n",
       "3  casual          Tuesday      76724.57          \n",
       "4  casual          Wednesday    61449.28          \n",
       "5  casual          Thursday     60407.26          \n",
       "6  casual          Friday       44073.56          \n",
       "7  casual          Saturday     49364.23          \n",
       "8  member          Sunday       26506.28          \n",
       "9  member          Monday       16801.05          \n",
       "10 member          Tuesday      16710.45          \n",
       "11 member          Wednesday    12346.86          \n",
       "12 member          Thursday     15108.39          \n",
       "13 member          Friday       13002.92          \n",
       "14 member          Saturday     19310.45          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "0"
      ],
      "text/latex": [
       "0"
      ],
      "text/markdown": [
       "0"
      ],
      "text/plain": [
       "[1] 0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[22m`summarise()` has grouped output by 'membership_type'. You can override using\n",
      "the `.groups` argument.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A grouped_df: 14 × 4</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>membership_type</th><th scope=col>day_of_week</th><th scope=col>number_of_rides</th><th scope=col>average_ride_length</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;ord&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>Sunday   </td><td>385390</td><td> 72027.80</td></tr>\n",
       "\t<tr><td>member</td><td>Sunday   </td><td>399424</td><td> 26506.28</td></tr>\n",
       "\t<tr><td>casual</td><td>Monday   </td><td>287848</td><td>103079.53</td></tr>\n",
       "\t<tr><td>member</td><td>Monday   </td><td>473063</td><td> 16801.05</td></tr>\n",
       "\t<tr><td>casual</td><td>Tuesday  </td><td>268761</td><td> 76724.57</td></tr>\n",
       "\t<tr><td>member</td><td>Tuesday  </td><td>505143</td><td> 16710.45</td></tr>\n",
       "\t<tr><td>casual</td><td>Wednesday</td><td>283061</td><td> 61449.28</td></tr>\n",
       "\t<tr><td>member</td><td>Wednesday</td><td>511195</td><td> 12346.86</td></tr>\n",
       "\t<tr><td>casual</td><td>Thursday </td><td>301634</td><td> 60407.26</td></tr>\n",
       "\t<tr><td>member</td><td>Thursday </td><td>520872</td><td> 15108.39</td></tr>\n",
       "\t<tr><td>casual</td><td>Friday   </td><td>331948</td><td> 44073.56</td></tr>\n",
       "\t<tr><td>member</td><td>Friday   </td><td>464736</td><td> 13002.92</td></tr>\n",
       "\t<tr><td>casual</td><td>Saturday </td><td>458508</td><td> 49364.23</td></tr>\n",
       "\t<tr><td>member</td><td>Saturday </td><td>454514</td><td> 19310.45</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A grouped\\_df: 14 × 4\n",
       "\\begin{tabular}{llll}\n",
       " membership\\_type & day\\_of\\_week & number\\_of\\_rides & average\\_ride\\_length\\\\\n",
       " <chr> & <ord> & <int> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & Sunday    & 385390 &  72027.80\\\\\n",
       "\t member & Sunday    & 399424 &  26506.28\\\\\n",
       "\t casual & Monday    & 287848 & 103079.53\\\\\n",
       "\t member & Monday    & 473063 &  16801.05\\\\\n",
       "\t casual & Tuesday   & 268761 &  76724.57\\\\\n",
       "\t member & Tuesday   & 505143 &  16710.45\\\\\n",
       "\t casual & Wednesday & 283061 &  61449.28\\\\\n",
       "\t member & Wednesday & 511195 &  12346.86\\\\\n",
       "\t casual & Thursday  & 301634 &  60407.26\\\\\n",
       "\t member & Thursday  & 520872 &  15108.39\\\\\n",
       "\t casual & Friday    & 331948 &  44073.56\\\\\n",
       "\t member & Friday    & 464736 &  13002.92\\\\\n",
       "\t casual & Saturday  & 458508 &  49364.23\\\\\n",
       "\t member & Saturday  & 454514 &  19310.45\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A grouped_df: 14 × 4\n",
       "\n",
       "| membership_type &lt;chr&gt; | day_of_week &lt;ord&gt; | number_of_rides &lt;int&gt; | average_ride_length &lt;dbl&gt; |\n",
       "|---|---|---|---|\n",
       "| casual | Sunday    | 385390 |  72027.80 |\n",
       "| member | Sunday    | 399424 |  26506.28 |\n",
       "| casual | Monday    | 287848 | 103079.53 |\n",
       "| member | Monday    | 473063 |  16801.05 |\n",
       "| casual | Tuesday   | 268761 |  76724.57 |\n",
       "| member | Tuesday   | 505143 |  16710.45 |\n",
       "| casual | Wednesday | 283061 |  61449.28 |\n",
       "| member | Wednesday | 511195 |  12346.86 |\n",
       "| casual | Thursday  | 301634 |  60407.26 |\n",
       "| member | Thursday  | 520872 |  15108.39 |\n",
       "| casual | Friday    | 331948 |  44073.56 |\n",
       "| member | Friday    | 464736 |  13002.92 |\n",
       "| casual | Saturday  | 458508 |  49364.23 |\n",
       "| member | Saturday  | 454514 |  19310.45 |\n",
       "\n"
      ],
      "text/plain": [
       "   membership_type day_of_week number_of_rides average_ride_length\n",
       "1  casual          Sunday      385390           72027.80          \n",
       "2  member          Sunday      399424           26506.28          \n",
       "3  casual          Monday      287848          103079.53          \n",
       "4  member          Monday      473063           16801.05          \n",
       "5  casual          Tuesday     268761           76724.57          \n",
       "6  member          Tuesday     505143           16710.45          \n",
       "7  casual          Wednesday   283061           61449.28          \n",
       "8  member          Wednesday   511195           12346.86          \n",
       "9  casual          Thursday    301634           60407.26          \n",
       "10 member          Thursday    520872           15108.39          \n",
       "11 casual          Friday      331948           44073.56          \n",
       "12 member          Friday      464736           13002.92          \n",
       "13 casual          Saturday    458508           49364.23          \n",
       "14 member          Saturday    454514           19310.45          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\nVK3t6xMnDK1TJPyr2UMqvPCWKaUpbSvadbpGUZbNOpXQ8vDyB7vvR1eZMjbNjuxZAjakvsfO\nHDW3f5vxn+8ymi0i4lfqhVXbNzbL8+idgf3X7Dl2O+xRTHRkVKxJRCasSnUebdu2FZEhhXu8\ntuHEZy8Vjm/t1qt360Flen397iv17awSAABkMkWZ2r143SWjQ41drUdjH/47+/Cj2NEza4rl\nqR12Hzbre0Upvu/Ksdr+1t1g738/qkr7ub3endJ+YlFvEYmLvjh61/XZL+QTkde7lXPzb338\n+3/23bpY18cgIm2K/Vm86+6F1x7VK+tvneGDc/tGbTj7YfuSIiKWWZ8PqtJ76bLXfnhrfZtC\nafYlIo+uvnt/wdEdQ6qKSFzUuTG7bhRovm7X6petv33Zq26bzw9suBPVKdDN2mKMOmcav/fA\n2w1FRGRQnQfFW63d/MuD2AbeLkkWyf1TN4f97/RHHUqLiFg++HxQld5LZ/Xd9+bnDfOla9Ea\nfF4YFuy57Ot35KMt1pbfxq9QNIb5rxVLsyN7loANqe6x+2tOi1Erdopb0TYdX+/Xq3PgzV86\n1Oy+olOdaZ//cM8ld+Vq1WvVbdC6/atvTpqTZh9fXQ/vUj9v4pbAGl0ibq1J840AACDrlBv7\nhin29ugjIdaXJ2Z8oXcv/U5J38TTxEWemv53WOk3vnicM0REWr79kYisXXLO+lLvXtqa6kTE\n1a+Vl1YTUH6+NdWJSGCd+iISlejWKp55+8enOhFRdN3nfeeu1ex/e689fYmIKIYvB1SO/1Hj\n5qLI/dMbjl59ZG2pPetAaGhoQqoTEUXrtm58vYSXJV8KFpFwcwr77DyCuseHrUSF/fTWwVSW\nny39J1aMCtu64laEiFjMEcM3X/Ev/95znnrbHdm7BFKXarCb+eERvXvpw1dPbVy78pPPVv91\n7XjBh1v6f3+5yay9t88e37Nr1+7duzdv+Hb+9JFp9tHW323iB1sTLT/ztllj3QK4ZgIAAGfy\nzDeoma/rjjHWx0pZJq27FNz4Q7eno0F02I8mi+WvOTUS36TN4NNQRB789cA6jUbnn/gtOkUM\ngU/SoaJJeuMP3wodnpretXgrP9fI2/vt6UtEXDwr5358OprWUOCn97pbrq6uUcinSMU63fqP\nXLbmp7C4p+634eJZNb/Lk0sslNQv7/Ap1TV5YY/+zcglpEW7TNcoysKPzojInT/Hno40Npv/\n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\nx6Uq+vipo2ccifcb8ubUd1/rk/BT1Jb4tOznfzph+qGEKmOmzIycM6NrE+PaueNv641Vw7vo\n7uz4NTkz6zm/rjjiGzrUWu8dTi5Dm/kfWB1zf1LJWPXr7ScG5bycRVky9q3vTytD3pg8573x\nTVwvfTj+jZg0fWnt1zJr33lj02l1/9cnzZ357jN1lI/feeWna6n61D9HT1/i1KLb1NkfTnil\nx+nvV838MVYIYablEu/38ScDU29tMihCCLF7783gLq3LNXrRoIvdmpAuhLix64zGtXobHxdT\nLZivVuS3Qc0sKt8V4gg7wImZU1SPhn+4YOGoHnV3rZv99e20Amc5uGC6R/Mes+eOctimzDBm\n3jrzMGOevnI+35Z7bBGYfwfOt8JhK74cHuRZ9dn/rvtsfIHLz14nDr4egJw4YlcsdfpOW1B/\n/+4DR37d9dU3a5aqXX0bPRYWPmhA4/IFH7f3aDV+0FNNhBBVur8Z/MX+mFvpty4vOpvuGjln\nXIirWghRp55b7/4fZD8/8Jleozs818JHK4SoHPTiiq0zLqfrW/h1bu65ct3eG82erWLUx6+I\nudN6TkurtSvqDnwifuzydGMLVyfVvX++uKYKjgj2XPrvo6lx63/8J/mNT9990t9VCFGrQf0/\n+w1YuuXKvN4hpbTfAqXHb/r2/N1Z68Y1cNcIIWrWbqg/GrH+k9NPjD6TZlS6dGlbx9dFhIbM\nmOh33c1TCHEr2mTLJd5vpaeaG7755pckXTu3uB2JuqFtAzXu1dr4uOz56Vr3viG/HrrlVW2U\nynQLT81oYaZakd8GTVf/ZGpRGcnReVfIreiP7b4D+DV5c1CnJkKIyt3HVfj8wJkEnfAv4F0x\nKXB4n46NhRCpcdscsykz0u/sfvvt3TlH1m/a7O6kytlXTrbcY4vA/DtwvhUGeGo1KqFSazSa\ngmNW9jqJOzrdkdcDkBPBrriqNQkb0iRMCJGWEPvb8SPbvt4wdWT0/M8XVi3oG1dBnapl/9tb\n7SQUcWtfrKvfUyH/fmlR6/VYc0/n+H+f0637MyePHPz2SuzNmzcvnj6WPW/fjhUnb/xRPDss\n4eSyFE2loaHeJdnewzwrR1R22vzZ5XuvhnifXXOwfPNRzjkur0o6fVLtEtze/36oVTm596zo\nvvjAddE7pJT2W6Dkf35VFGVin545Bz30/7j5d2sbunP6S8MaNm9Wv169ps1bPVrNVwhzLZd4\n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"
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAIAAAByhViMAAAABmJLR0QA/wD/AP+gvaeTAAAg\nAElEQVR4nOzdd2AT5R/H8e9lJ01pS8vee29kDxVUEGQoCqIgQ4aIgGxFZDoZKgjuhQNQFBFB\nZQmi4A8RFxsEmbLpHkmT+/2RUjrTtDQJnO/XPyRP7u75Prmk+XBTUVVVAAAAcOPTBbsAAAAA\nFA6CHQAAgEYQ7AAAADSCYAcAAKARBDsAAACNINgBAABoBMEOAABAIwh2AAAAGkGw8wvVnVDd\nZlIURac37Yx3BrucQFOyMZjtZSrVuHvwhNV/Xgx2dSIivz7RUFGUzltOB6Cvx8qEKoqyPym1\n0Jd86cADnre3aI1nc53InVwzxOSZ7PuYlEKvITv/jdd3hz5opyhKuw8OeZmmUD4DOx6vl/3T\nnl23P85fSy/XKJCfdgBBR7Dzi4t/TT6U5BQR1e2c+MU/wS4nOMpVqZquZLj57LFDK9+d271R\nmQfmbApwJao74aeffvrfzhMB7jdgog/P3JOYc5C6fHjGgcT/3H8tAsYSVb5qBlUqlxIRRTFU\nzayUWR/sSgvN/rWv9+/aumyJSLPRWqxMjW4PTdz8T3yWaWL/3jjy/tvLFQ83hUTUaNZp1pKt\nBV6UL9MAyESFH3zWsayIlL6zsoiEVXwi2OUEmuejtSvekbEx/vTexRPvMyqKiAxecTSQ9Tji\nd4lIkfJT01su/PrV+++/v/5MYgB6H1naLiL7Ep2FvuSL+/uKiKIziEjnlUdznGZD7yoiYtQp\nIrIpOrnQa8jOf+P13cH324pI2/cPepnGH5+BpEtrRERvKlWIy7x2hTjSddM6eb7dUdXqt2nZ\nqJjdKCJ6c+nFO8+nT3Nux6JiRr2IRFSqfVOj2madIiLNRy0twKJ8mQZAFgS7wudyXixj1iuK\n7uuTu6w6RVH0W2NSgl1UQOUY7Dx2Lr5bRIy22mccroDVkz3YBZK/g114lSl6RYmsPS+HKdzO\npqEmc5GWnYpaCHYBcH0Gu8Jyad8LiqLoDEWeW/mHp8XlOPPKyFYiYg5rc9HpUlXV7bx4a4RF\nRAYu2uJWVVVVow+tbRpqEpEZv57P16J8mQZAduyKLXznfhl7KsUVWm5MlzKNplePUFXXE8uO\n+L1XNeWc0+33Xq5Zk0c+7VcixJm495F1J69pQUEerzshOZjHkGVkCm0xvnzo5QNTD2U7rC32\n+NydcY7y3Z/Vi3ItXaiuxCSH61qWUDgCtdLdjmSXGoB+rofe8/FJ3j76VVVV6z6+dnKP+p4W\nnbHEqIVbB5QMSYn5cfwfF0Xk9Obhmy4nRzV44d0R7TyfubCqnb/4tJeILOi/JF+L8mUaANkR\n7Arfd+PXiUjjGcNE5N7ZN4nIH7PfSH91bY9KiqI0fe6PLHOd2nifoihFa8xIbzn24ycDetxc\npniE2RZerd5NI2a8fjjDcVT732itKMrIv6Pjj63t07a23WT78Fyi5yXVFfPJvPEdmtWODAsx\nmKzFylXv/MCo7/bHZO7Q9c2iJ9rVrRRqthQvV2vApLeT3FInxBRaakjGibzXUCD6SU/UFZHt\ns3d4nm9/pLaiKPfsy/RnWnXFKIoSUuzePMeb52CX1Yoy2RuLSOzxWYqiRNZ4T0R+n9Ek2+Hk\n7i0fPdetXf1i4XZTSFiluq1GTHvrdMrVNOM5Hn/wocs7P5xSt2y43Wo0mEMq1W/71BvrfRm2\nqrq/fXVy29oVQy2miOJlO/Qa+vWV80j+WXmnoigVu63JMsu+xa0VRak5aHOeCx84pb7blTh+\nc9aj4/965gMRuX9ao+yz5Llm08Z74Nzbk+4ubg+zmQ32iOJtew7fcSFZxLV24fiWtcrbzcYi\nURU6D3gye6b0Ml7fa8htpV/avWbU/Z2qloo0G01hkWXbdh247H9ncnxn4v5e/3DPdiUiixgt\nIRXrtX5y8XfpL2X5DDxWJtRoreKM2/N495ZhthCj3hBRotwd94/ceCg2l3fdJz6uXN97L8BX\nMstIC/xJXrP7soj0eax+5mbd4NvLiMjeredE5IcnfhCR1i8/mHGKsh0XhRt0l/Y9dcbh9n1R\nvkwDIAdB3mKoOa6Uk5FGvaIz74pzqKrqiP/TrFMURbfhctpesEv7J4tISMnBWWZc3KiYiNyz\n9rjn6faX+usVRVGUEhVrt27eICrEICIhZW7deDbtQJl9r7cSkYd3fdewiMlaonrHO+9adTFJ\nVVV3auyQZsVFRGcIb9C0ZftWN1WMMIuI3lTqq/NXD7JZ1L+uiCg6S/VGLWuWKyoiZW4eUc5s\nsJd8OH2aPGvIjeejleOuWFVVo49MFBFrVA/P023Da4nI3XsvZJzGnRotIraoXuktOY7Xl8H+\nPn/mxHEDRcRcpPXkyZNnztupqupv0xuLSKfNp9KX/0q/BiKiKEqJyvXatWwaYdSLSFjVbnsS\n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\nyxbTjbFvdZu8Zk+K0q/648/2/vDuexBlWjbXx206mmr6efHREg17ezric+4Kj+71ih348m9h\nNX75V1yjN+9ejGa1ivueikqlwmoxZ961v00X95ij2ztOrdMoVLq10fdYPre5QuU3aNrSWePf\nbRBW9L8jP456p9uYpX8J4Yw2FSqf1sW8YzafO7PmpF+F9hlfe1Km1eP6uM3/Xvs+Id3SrGag\njcptPN8yPLjv3HAjZMvLO9dzOfe/Hr19b/+rnH0vbvvazEFmO3e5Xwu2D6E2qrLpnj17dzsU\nsMMOCinO2LmYSlPy9/37PfZf/yAiOHPQnBYvhAj28ci4m3znGKOP36235PITcMUbhej37Din\nf6OCp0oIYdb/uy/RkLHo5EuLD8aals4fFaBSCCEMCbsy5/IMbPKEz/yvduw9dym568eOuv6/\ncufIm28vunLh5BVFufaldJnjAdXCzYZvfo43NArUCiGslrQNMSnFXg2xsaic2nR5j1k9uOO8\nS7woLAe2xJpalsr4PjDrklEfJkS+2zX4QPQBc8/ur5UNr/+qEBc2DX5v+VeiywzntFn/fyVX\nr/32a3Gr0uDbn3r0Dm7rr9owZ933aq/KDX01Nip/M+fnW07ccyPYz57XY/zRDQ/20n+I+742\n7eSGhxfbh9DkS/NzqupBue5Zd3sqAtnijJ2LqTwrDnulyi/T3vt85cYDB48cPXJwz44NH783\n069is84ldULhUcXbY8+ctWdirl848efMkQsUuX3xW9E6/SprU0cNn7Hv0PETf+2bOXyMr/b2\niQcP3zCrNX3DnqPXb1w7cXDn5BFLhRAXr97K+Fe33Yshp7+cofRt+Oqd68LynS64fUV1wtip\nO4o90U2dpQ/vEh1fKKWbO3TSnj+PnT3+1/JPB51MD3irVbmcl5Rjmy7v8bYcdpzGt37POkEr\nho7buufP82dPbpj/4abjcc81LOYRkPLthqWz1u06efbCqaP7o7de1pV+xmltlnj2KVPqsROp\npjbhgbfLV3p3CPE5s/WyX8XXMkZyqtzG8y0n7rkR7GL36zHbXtz5tWknN2zB9iHURlVKhUi7\nEhMfnyiEvXvWjZ6KQM44Y+d6T/SaNLrc6vXbtk7feD0tXRFYvHSd5zoPfvPljOgz8uO3Ppv9\nzdD+0UaLNbxJ3ycTFttemkIdNHb2iLmzls2YMFx4Fm3Udmif/dOWCyGE8CraekzX6wuXTdqc\nqiofVrvjsDn+U99ePmRA/dWrympVZVq0sK6dUa51Bwe2qlB1a1B8xK7LHUaE3Tfef8Yk388X\nLpw8OildVabyY4On9Av3tvXkzKlN1/d4R0477pWPphsWfP7NvEnxJo+QCrXe/2REbZ2H0L0x\npnvyV98t/mlZsi6wWGjNFyf2a+W0Nj2DXg1Ur0jVPZV1m9dtU05M/bt860qZI9lXLnJ8vtng\nhhvBTna+Hn1KZ9OLQq1y39emfdzz8GLjEKrOuarqLRosWzKr7+BGUYvfE/btWbd6KgI5sqIg\nsFgMNxMNDl1Fauy3zZu3PJpicuhaXMv5PTphxz2oMOzKXDl0Izh5t0qwQwtKC47YswWld0iD\nM3YFg0KhCXTcr1Za043p+q0z1/mU6Vjd5nmyAsxFPTp2xz2oMOzKXDl+Izhvt0qwQwtUC/m8\nZwtU75AGTzUIQ8JPr3eerdIG9ZnRzNW1OEph6FEUmjZtk2kjSNCLBC08tMLcO1xIYbXmcpUl\n5GdNjzl7MaB8BZ1K3kvxC0OPotC0aZtMG0GCXiRo4aEV5t7hOgQ7AAAASfB1JwAAAJIg2AEA\nAEiCYAcAACAJgh0AAIAkCHYAAACSINgBAABIgmAHAAAgCYIdAACAJAh2AAAAkiDYAQAASIJg\nBwAAIAmCHQAAgCQIdgAAAJIg2AEAAEiCYAcAACAJgh0AAIAkCHYAAACSINgBAABIgmAHAAAg\nCYIdAACAJAh2AAAAkiDYAQAASIJgBwAAIAmCHQAAgCQIdgAAAJIg2AEAAEiCYAcAACAJgh0A\nAIAkCHYAAACSINgBAABIgmAHAAAgif8DsD1cEiiwmPcAAAAASUVORK5CYII="
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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"
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Ride Length Summary\n",
    "mean(all_trips_v2$ride_length)\n",
    "median(all_trips_v2$ride_length)\n",
    "max(all_trips_v2$ride_length)\n",
    "min(all_trips_v2$ride_length)\n",
    "summary(all_trips_v2$ride_length)\n",
    "\n",
    "## Members and casual users summary comparison\n",
    "member_compare <- all_trips_v2 %>%\n",
    "  drop_na(member_casual) %>% \n",
    "  group_by(membership_type = member_casual) %>% \n",
    "  summarize(average_ride_length = mean(ride_length), number_of_rides = n())\n",
    "\n",
    "View(member_compare)\n",
    "\n",
    "## average ride time by each day for members vs casual users\n",
    "avg_member_per_day <- all_trips_v2 %>%\n",
    "  drop_na(member_casual) %>% \n",
    "  group_by(membership_type = member_casual, day_of_week) %>% \n",
    "  summarize(average_ride_length = mean(ride_length))\n",
    "\n",
    "View(avg_member_per_day)\n",
    "\n",
    "### Notice that the day_of_week is not in order\n",
    "### change the levels of day_of_week, sunday = 1\n",
    "\n",
    "all_trips_v2$day_of_week <- ordered(all_trips_v2$day_of_week, levels = c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))\n",
    "\n",
    "#run the code again\n",
    "avg_member_per_day <- all_trips_v2 %>%\n",
    "  drop_na(member_casual) %>% \n",
    "  group_by(membership_type = member_casual, day_of_week) %>% \n",
    "  summarize(average_ride_length = mean(ride_length))\n",
    "\n",
    "View(avg_member_per_day)\n",
    "\n",
    "## number of rides by type and weekday\n",
    "### first check the ride_id duplicate to count number of ride\n",
    "sum(duplicated(all_trips_v2$ride_id))\n",
    "\n",
    "### if zero, lets goo\n",
    "membertype_per_day <- all_trips_v2 %>%\n",
    "  drop_na(member_casual) %>% \n",
    "  group_by(membership_type = member_casual, day_of_week) %>% \n",
    "  summarise(number_of_rides = n(), average_ride_length = mean(ride_length)) %>% #n() for counting \n",
    "  arrange(day_of_week)\n",
    "\n",
    "View(membertype_per_day)\n",
    "\n",
    "\n",
    "## visualize\n",
    "### numbers of rides by rider type\n",
    "ggplot(data = membertype_per_day, mapping = aes(x = day_of_week, y = (number_of_rides/1000), fill = membership_type)) + \n",
    "  geom_col(position = \"dodge\") +\n",
    "  labs(title = \"Number of Rides by Membership Type in 2022\", \n",
    "       x = \"\", y = \"Number of Rides<br><span style = 'font-size:8pt'>(in thousand)</span>\", \n",
    "       fill = \"Membership Type\")+\n",
    "  theme(axis.title.y = ggtext::element_markdown())\n",
    "\n",
    "ggsave(filename = \"number-of-rides.png\", width = 6.86, height = 4.11, dpi=300)\n",
    "\n",
    "### average duration\n",
    "ggplot(data = membertype_per_day, mapping = aes(x = day_of_week, y = average_ride_length, fill = membership_type)) + \n",
    "  geom_col(position = \"dodge\") +\n",
    "  labs(title = \"Average Duration by Membership Type in 2022\", \n",
    "       x = \"\", y = \"Average Duration<br><span style = 'font-size:8pt'>(in second)</span>\", \n",
    "       fill = \"Membership Type\")+\n",
    "  theme(axis.title.y = ggtext::element_markdown())\n",
    "\n",
    "ggsave(filename = \"avg-duration.png\", width = 6.86, height = 4.11, dpi=300)\n",
    "\n",
    "### day with most nor and avg dur\n",
    "highest_day_nor <- membertype_per_day %>% \n",
    "  filter(membership_type == \"casual\") %>% \n",
    "  arrange(desc(number_of_rides))\n",
    "\n",
    "  ggplot(data = highest_day_nor, mapping = aes(x = (number_of_rides/1000), y = (day_of_week = reorder(day_of_week, number_of_rides)))) + \n",
    "    geom_col() +\n",
    "    labs(title = \"Number of Rides Per Day by Casual Riders\", \n",
    "        x = \"Number of Rides<br><span style = 'font-size:8pt'>(in thousand)</span>\", y = \"\")+\n",
    "    theme(axis.title.x = ggtext::element_markdown())\n",
    "  ggsave(filename = \"high-nor-day.png\", width = 6.86, height = 4.11, dpi=300)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82b3a2e3",
   "metadata": {
    "papermill": {
     "duration": 0.011977,
     "end_time": "2023-03-19T08:28:36.017744",
     "exception": false,
     "start_time": "2023-03-19T08:28:36.005767",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## STEP 5 - Export Summary File for Further Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ac2f1df8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-03-19T08:28:36.051024Z",
     "iopub.status.busy": "2023-03-19T08:28:36.049388Z",
     "iopub.status.idle": "2023-03-19T08:28:36.080696Z",
     "shell.execute_reply": "2023-03-19T08:28:36.077806Z"
    },
    "papermill": {
     "duration": 0.050479,
     "end_time": "2023-03-19T08:28:36.083508",
     "exception": false,
     "start_time": "2023-03-19T08:28:36.033029",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "## export dataframe to csv\n",
    "\n",
    "write.csv(member_compare, file = \"all_member_compare.csv\")\n",
    "write.csv(membertype_per_day, file = \"by_day_member_compare.csv\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.0.5"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 122.363802,
   "end_time": "2023-03-19T08:28:36.522802",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-03-19T08:26:34.159000",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
